#!/usr/bin/env python3

import requests
import json

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNDQxZjQ5ZTktYjZiYS00MjcyLThmMTAtNmIxZThkZDhlY2I4IiwiZXhwIjoxNzUzNDc1NDkwfQ.ulqgqu2fNZBakxr4zvpwj-HZaY-ONeeRF72jm-TTKns"
BASE_URL = "http://209.38.237.102:8080"
headers = {"Authorization": f"Bearer {TOKEN}"}

print("üîç –ò—Å—Å–ª–µ–¥—É–µ–º Chat API")
print("="*60)

# 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
print("\n1Ô∏è‚É£ GET /api/v1/chat/chats - –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤")
response = requests.get(f"{BASE_URL}/api/v1/chat/chats", headers=headers)
print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
if response.status_code == 200:
    chats = response.json()
    print(f"‚úÖ –ß–∞—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(chats) if isinstance(chats, list) else '–Ω–µ —Å–ø–∏—Å–æ–∫'}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(chats, ensure_ascii=False)[:200]}")
else:
    print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

# 2. –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç (POST)
print("\n2Ô∏è‚É£ POST /api/v1/chat/chats - –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞")

# –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
test_email = f"test_chat_{int(requests.get('http://worldtimeapi.org/api/timezone/Etc/UTC').json()['unixtime'])}@example.com"
register = requests.post(f"{BASE_URL}/api/v1/auth/signup", json={"email": test_email, "password": "password123"})
if register.status_code == 200 or "created" in register.text.lower():
    login = requests.post(f"{BASE_URL}/api/v1/auth/login", json={"email": test_email, "password": "password123"})
    if login.status_code == 200:
        import base64
        other_token = login.json().get("token")
        other_payload = base64.b64decode(other_token.split('.')[1] + '==')
        other_user_id = json.loads(other_payload)['user_id']
        print(f"‚úÖ –í—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {other_user_id}")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞
        test_payloads = [
            {"user_id": other_user_id},
            {"recipient_id": other_user_id},
            {"other_user_id": other_user_id},
            {"participant_id": other_user_id},
            {"participants": [other_user_id]},
            {"users": [other_user_id]}
        ]
        
        for payload in test_payloads:
            print(f"\n   –ü—Ä–æ–±—É–µ–º: {payload}")
            response = requests.post(f"{BASE_URL}/api/v1/chat/chats", headers=headers, json=payload)
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code in [200, 201]:
                print(f"   ‚úÖ –£—Å–ø–µ—Ö! –û—Ç–≤–µ—Ç: {json.dumps(response.json(), ensure_ascii=False)}")
                chat_id = response.json().get("id") or response.json().get("chat_id")
                if chat_id:
                    print(f"\nüéâ CHAT ID: {chat_id}")
                    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç chat_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ WebSocket!")
                break
            else:
                print(f"   ‚ùå {response.text[:100]}")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è: {login.text}")
else:
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {register.text}") 